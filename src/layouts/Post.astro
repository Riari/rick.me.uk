---
import type { CollectionEntry } from "astro:content";
import ContentFooter from "../components/ContentFooter.astro";
import Document from "../components/Document.astro";
import Head from "../components/Head.astro";
import { loadAndFormatCollection } from "../util/collection";
import { truncate } from "../util/string";

type Props = CollectionEntry<"posts">["data"];

const { title, description, pubDate, heroImage, tags } = Astro.props;

const posts: any[] = (await loadAndFormatCollection("posts")).sort(
    (a: any, b: any) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
);

let prevPost = null;
let nextPost = null;

for (let i = 0; i < posts.length; ++i) {
    if (posts[i].data.title == title) {
        if (i > 0) prevPost = posts[i - 1];
        if (i + 1 < posts.length) nextPost = posts[i + 1];
        break;
    }
}

if (prevPost != null) {
    prevPost.data.title = truncate(prevPost.data.title);
}

if (nextPost != null) {
    nextPost.data.title = truncate(nextPost.data.title);
}
---

<Document title={title} description={description}>
    <div class="container container--post">
        <div class="head-container">
            <Head title={title} backgroundImage={heroImage}>
                <h2 class="subheading">{description}</h2>

                <ul class="button-group button-group--primary-5 text-center">
                    {
                        tags.map((tag) => (
                            <li>
                                <a href={`/posts/tag/${tag}/1`}>
                                    <span>{tag}</span>
                                </a>
                            </li>
                        ))
                    }
                </ul>
            </Head>
        </div>

        <div class="body">
            <div class="inner-container">
                <div class="publish-date">
                    <div>
                        {pubDate.toLocaleString("default", { month: "long" })}
                        {pubDate.getDate()}, {pubDate.getFullYear()}
                    </div>
                </div>

                <article>
                    <slot />
                </article>

                <hr />

                <div class="adjacent-content-links">
                    <div class="previous">
                        {
                            prevPost != null && (
                                <a href={prevPost.absoluteURL}>
                                    <span class="prefix">‹ Previous post</span>
                                    <br />
                                    <span class="title">{prevPost.data.title}</span>
                                </a>
                            )
                        }
                    </div>

                    <div class="next">
                        {
                            nextPost != null && (
                                <a href={nextPost.absoluteURL}>
                                    <span class="prefix">Next post ›</span>
                                    <br />
                                    <span class="title">{nextPost.data.title}</span>
                                </a>
                            )
                        }
                    </div>
                </div>
            </div>
        </div>

        <ContentFooter />
    </div>
</Document>